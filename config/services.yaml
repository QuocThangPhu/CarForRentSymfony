# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    brochures_directory: '%kernel.project_dir%/public/uploads/images'
    sqsUrl: '%env(SQS_URL)%'
    email_host:  '%env(ZOHO_HOST)%'
    email_username:  '%env(ZOHO_USERNAME)%'
    email_password:  '%env(ZOHO_PASSWORD)%'
    email_smtp:  '%env(ZOHO_SMTP)%'
    email_port:  '%env(ZOHO_PORT)%'
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

#    App\EventListener\ExceptionListener:
#        tags:
#            - { name: kernel.event_listener, event: kernel.exception }

    App\EventListener\AuthenticationFailureListener:
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_failure, method: onAuthenticationFailureResponse }

    App\EventListener\JWTNotFoundListener:
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_not_found, method: onJWTNotFound }

    App\EventListener\JWTExpiredListener:
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_expired, method: onJWTExpired }

    App\Service\UploadFileService:
        arguments:
            $targetDirectory: '%brochures_directory%'
    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    Aws\S3\S3Client:
        arguments:
            - version: '%env(VERSION)%'
              region: '%env(REGION)%'
              credentials:
                  key: '%env(AWS_S3_ACCESS_ID)%'
                  secret: '%env(AWS_S3_ACCESS_SECRET)%'
    Aws\Sqs\SqsClient:
        arguments:
            - version: 'latest'
              region: 'us-east-1'
              credentials:
                  key: '%env(AWS_S3_ACCESS_ID)%'
                  secret: '%env(AWS_S3_ACCESS_SECRET)%'
